/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hikmat30ce.workday.integrator.hr.db.scheduler;

import java.io.IOException;
import java.sql.Timestamp;
import javax.xml.parsers.ParserConfigurationException;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import org.xml.sax.SAXException;
import com.hikmat30ce.workday.integrator.hr.db.clients.WorkdayHRClient;
import com.hikmat30ce.workday.integrator.hr.db.config.WorkdayHRConfiguration;
import com.hikmat30ce.workday.integrator.hr.db.helpers.GetWorkersHelper;
import com.hikmat30ce.workday.integrator.hr.db.models.Tblgetworkers;
import com.hikmat30ce.workday.integrator.hr.db.repository.TblgetworkersRepository;
import com.hikmat30ce.workday.integrator.hr.generated.GetWorkersResponseRootType;
import java.util.List;

/**
 *
 * @author Hikmat Ullah
 * @skype huk9791
 * @email huk9191@gmail.com
 */
@Component
public class SchedulingTask {

    private static final Logger log = LoggerFactory.getLogger(SchedulingTask.class);
    private int totalPages = 0;

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private TblgetworkersRepository tblgetworkersRepository;

    //@Scheduled(fixedRate = 86400000) //24 hrs
    //@Scheduled(fixedRate = 43200000) //12 hrs
    @Scheduled(fixedRate = 3600000) //1 hr
    // @Scheduled(fixedRate = 60000)
    public void WDGetWorkers() throws SAXException, IOException, ParserConfigurationException {

        log.info("The time is now {}", Long.toString((new Timestamp(System.currentTimeMillis() / 1000)).getTime()));
        AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(WorkdayHRConfiguration.class);
        WorkdayHRClient client = context.getBean(WorkdayHRClient.class);

        int counter = 1;

        do {
            GetWorkersResponseRootType getWorkersResponseRootType = client.GetWorkers(counter);
            totalPages = Integer.parseInt(getWorkersResponseRootType.getResponseResults().getTotalPages().toString());
            getWorkersResponseRootType.getResponseData().getWorker().stream().map((worker) -> new GetWorkersHelper(worker)).map((GetWorkersHelper workersHelper) -> {
                List<Tblgetworkers> tblgetworkers = tblgetworkersRepository.findByemployeeid(workersHelper.getEmployeeid());
                Tblgetworkers tblgetworker;
                if (tblgetworkers != null && tblgetworkers.size() > 0) {
                    tblgetworker = tblgetworkers.get(0);
                    log.info("Updating worker : " + workersHelper.getEmployeeid());
                } else {
                    tblgetworker = new Tblgetworkers();
                    tblgetworker.setEmployeeid(workersHelper.getEmployeeid());
                    log.info("Creating worker : " + workersHelper.getEmployeeid());
                }

                tblgetworker.setUserid(workersHelper.getUserid());
                tblgetworker.setDob(workersHelper.getDob());
                tblgetworker.setFormattedname(workersHelper.getFormattedname());
                tblgetworker.setFirstname(workersHelper.getFirstname());
                tblgetworker.setLastname(workersHelper.getLastname());
                tblgetworker.setCountryname(workersHelper.getCountryname());
                tblgetworker.setGender(workersHelper.getGender());
                tblgetworker.setMaritalstatus(workersHelper.getMaritalstatus());
                tblgetworker.setEthnicity(workersHelper.getEthnicity());
                tblgetworker.setCitizenshipstatuscode(workersHelper.getCitizenshipstatuscode());
                tblgetworker.setSocialsecuritynumber(workersHelper.getSocialsecuritynumber());
                tblgetworker.setPassportid(workersHelper.getPassportid());
                return tblgetworker;
            }).forEach((tblgetworker) -> {
                tblgetworkersRepository.save(tblgetworker);
            });
            counter++;
        } while (counter <= totalPages);
    }
}
